# Thanks to Adrian Rosebrock https://www.pyimagesearch.com/

[default]
# logLevel can take: debug, info, warning, error or critical
logLevel = debug

# It is a filter to eliminate noises in an image. Here you specifie the
# deviation in X and Y direction
gaussianBlur = 21, 21

# It is the camera's location. You can put an IP or a number like 0, 1 … that
# specifies the number of the camera. If you don't know the right number, you
# have 2 possibilities: try 0 then 1 … or put -1
# -1 is actually an automatic selection
camStream = http://192.168.1.2:8080/?action=stream


# The threshold value that is used to classify pixel values. This will then
# tell if the pixel becomes black or white
deltaThresh = 5

# It's the quality that will be used when the image will be saved
jpegQuality = 90

# The max number that queue can be have. Be careful, a big number will consume
# a lot of memory
maxFrameInQueue = 125

# If the queue is full, read frames process will stop for the specified
# duration
timeSleepQueueIsFull = 1

# Number of pixels from which it is considered a motion
minArea = 5000

# Number of detection before writing image
motionNumBeforeWritePic = 4

# The directory where image will be stored
recordPath = /tmp/motion

# Size of width in pixels to resize image. The reduce height proportionally
resizeWidth = -1

# The angle in degrees to turn the image. A positive number turns in the
# trigonometric sense
rotatePicture = 0

# If you want to see the frame, say yes otherwise write no. You can see it
# only on a local test (localhost)
see = false

# Number of second that the read frames process will wait before beginning
waitAtStart = 0

# weight adjusts the persistence of the detection because the brightness will
# vary during the day. the closer you are to 0, the more striking the
# movements. On the contrary, the closer we get to 1 and the less they are
weight = 0.5

# whichFrame can take: frame, gray, blur, frameDelta, thresh
whichFrame = frame

[writing]
# Color which use to draw rectangle around the motion(s). Use RGB color
rectangleColorRGB = 255, 0, 0

# You can write time when image is saved. true/false
writeTimeOnPicture = true

# Size of text
textSize = 0.5

# Thickness of text. Must be an integer
thickness = 1

# Position of text
posXY = 10, 25

# Color of text
colorRGB = 255, 0, 0
